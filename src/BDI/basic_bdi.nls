to printbdi [bdi]
  if debug-bdi 
  [print bdi]
end

to set-convoi-path-zone [zones]
  let bel create-belief "path-Zone" zones
  ifelse exist-beliefs-of-type "path-Zone"
  [update-belief bel]
  [add-belief bel]
end

to-report get-convoi-path-zone
  let bel read-first-belief-of-type "path-Zone"
  report item 1 bel
end

to set-drone-munition [munition]
  let bel create-belief "munition" munition
  ifelse exist-beliefs-of-type "munition"
  [update-belief bel]
  [add-belief bel]
end

to-report get-drone-munition
  let bel read-first-belief-of-type "munition"
  report item 1 bel
end

to set-drone-essence [essence]
  let bel create-belief "essence" essence
  ifelse exist-beliefs-of-type "essence"
  [update-belief bel]
  [add-belief bel]
end

to-report get-drone-essence
  let bel read-first-belief-of-type "essence"
  report item 1 bel
end

to set-convoi-critic [critic?]
  let bel create-belief "critic" critic?
  ifelse exist-beliefs-of-type "critic"
  [update-belief bel]
  [add-belief bel]
end

to-report get-convoi-critic
  let bel read-first-belief-of-type "critic"
  report item 1 bel
end

to set-leader-id-convoi [id]
  let bel create-belief "leaderC" id
  ifelse exist-beliefs-of-type "leaderC"
  [update-belief bel]
  [add-belief bel]
end

to-report get-leader-id-convoi
  let bel read-first-belief-of-type "leaderC"
  report item 1 bel
end

to set-leader-id-drone [id]
  let bel create-belief "leaderD" id
  ifelse exist-beliefs-of-type "leaderD"
  [update-belief bel]
  [add-belief bel]
end

to-report get-leader-id-drone
  let bel read-first-belief-of-type "leaderD"
  report item 1 bel
end

to add-hostile-belief [zone]
  let bel create-belief "hostile" zone
  add-belief bel
end 

to remove-hostile-belief [zone]
  let bel create-belief "hostile" zone
  if exists-belief bel 
  [remove-belief bel]
end 

to-report get-hostile-belief 
  ifelse exist-beliefs-of-type "hostile"
  [report item 0 beliefs-of-type "hostile"]
  [report []]
end 